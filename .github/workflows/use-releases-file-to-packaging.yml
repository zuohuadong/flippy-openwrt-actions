#========================================================================================================================
# https://github.com/ophub/flippy-openwrt-actions
# Description: Use Releases file to packaging
# Cron: min (0 - 59) / hour (0 - 23) / day of month (1 - 31) / month (1 - 12) / day of week (0 - 6)(Sunday - Saturday)
#========================================================================================================================

name: Use Releases file to Packaging

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      openwrt_soc:
        description: "Choose Amlogic SoC."
        required: false
        default: "vplus_beikeyun_l1pro_s905x3"
      openwrt_kernel:
        description: "Choose kernel version."
        required: false
        default: "5.15.25_5.10.100"
  #schedule:
    #- cron: '0 17 * * 0'

env:
  TZ: Asia/Shanghai
  DELETE_RELEASE: true
  DELETE_ARTIFACTS: true
  KEEP_DAY: 1
  KEEP_MININUM_RUNS: 0
  KEEP_MININUM_RELEASE: 2

jobs:
  build:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install $(curl -fsSL https://raw.githubusercontent.com/ophub/amlogic-s9xxx-armbian/main/compile-kernel/tools/script/ubuntu2004-openwrt-depends)
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "$TZ"

      - name: Download armvirt file
        id: download
        run: |
          armvirt_tarfile_path="openwrt/bin/targets/armvirt/64"
          [ -d "${armvirt_tarfile_path}" ] || mkdir -p ${armvirt_tarfile_path}
          curl -s "https://api.github.com/repos/ophub/amlogic-s9xxx-openwrt/releases" | grep -o "openwrt_s9xxx_.*/.*rootfs.tar.gz" | head -n 1 > DOWNLOAD_URL
          [ -s DOWNLOAD_URL ] && wget -q -P ${armvirt_tarfile_path} https://github.com/ophub/amlogic-s9xxx-openwrt/releases/download/$(cat DOWNLOAD_URL)
          [ "$?" -ne "0" ] && echo "armvirt file download failed!" && exit 1
          echo "::set-output name=status::success"

      - name: Package Armvirt as OpenWrt use Flippy script
        uses: ophub/flippy-openwrt-actions@main
        if: steps.download.outputs.status == 'success' && !cancelled()
        env:
          OPENWRT_ARMVIRT: openwrt/bin/targets/*/*/*rootfs.tar.gz
          PACKAGE_SOC: s912
         # PACKAGE_SOC: ${{ github.event.inputs.openwrt_soc }}
          KERNEL_VERSION_NAME: ${{ github.event.inputs.openwrt_kernel }}

      - name: Upload OpenWrt Firmware to Release
        uses: ncipollo/release-action@main
        if: env.PACKAGED_STATUS == 'success' && !cancelled()
        with:
          tag: openwrt_s9xxx_${{ env.PACKAGED_OUTPUTDATE }}
          artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
          allowUpdates: true
          token: ${{ secrets.GH_TOKEN }}
          body: |
            This is OpenWrt firmware for Armvirt 64
            * Firmware information
            Default IP: 192.168.1.1
            Default username: root
            Default password: password
            Default WIFI name: OpenWrt
            Default WIFI password: none
            Install to EMMC: Login to OpenWrt → System → Amlogic Service → Install OpenWrt

      - name: Delete older releases
        uses: dev-drprasad/delete-older-releases@master
        if: env.DELETE_RELEASE == 'true'
        with:
          keep_latest: ${{ env.KEEP_MININUM_RELEASE }}
          delete_tags: true
          delete_tag_pattern: _
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Delete older workflow runs and artifacts
        uses: Mattraks/delete-workflow-runs@main
        if: env.DELETE_ARTIFACTS == 'true'
        with:
          token: ${{ secrets.GH_TOKEN }}
          repository: ${{ github.repository }}
          retain_days: ${{ env.KEEP_DAY }}
          keep_minimum_runs: ${{ env.KEEP_MININUM_RUNS }}
